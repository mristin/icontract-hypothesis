def test_square_greater_than_zero(self) -> None:
    @given(
        x=st.integers())
    def execute(x) -> None:
        tests.pyicontract_hypothesis.samples.sample_module.square_greater_than_zero(x)

def test_some_func(self) -> None:
    @given(
        x=st.integers(min_value=1))
    def execute(x) -> None:
        assume(x > 0)
        tests.pyicontract_hypothesis.samples.sample_module.some_func(x)

def test_another_func(self) -> None:
    @given(
        x=st.integers(min_value=1).filter(lambda x: square_greater_than_zero(x)))
    def execute(x) -> None:
        assume(
            (square_greater_than_zero(x)) and
            (x > 0)
        )
        tests.pyicontract_hypothesis.samples.sample_module.another_func(x)